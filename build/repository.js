// Generated by CoffeeScript 1.10.0
(function() {
  var Event;

  Event = require('./event');

  module.exports = function(aggregateName, Aggregate, eventStore) {
    var cache, properties;
    cache = {};
    properties = {
      add: {
        value: function(attrs) {
          var agg, state;
          agg = Aggregate(Object.assign({}, attrs));
          cache[agg.id] = agg;
          state = Object.assign({}, agg.state);
          return Event({
            name: (aggregateName.trim()) + "CreatedEvent",
            aggregateId: agg.id,
            state: state,
            payload: attrs
          });
        }
      },
      load: {
        value: function(id) {
          var toReturn;
          if (cache[id]) {
            return cache[id];
          } else {
            toReturn = null;
            eventStore.getEvents().reverse().some(function(event) {
              var agg;
              if (event.aggregateId === id) {
                agg = Aggregate(Object.assign({
                  id: id
                }, event.state));
                cache[id] = agg;
                toReturn = agg;
                return true;
              }
            });
            return toReturn;
          }
        }
      }
    };
    return Object.defineProperties({}, properties);
  };

}).call(this);
